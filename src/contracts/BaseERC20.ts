/**
 * BaseERC20 Contract - Optimized for Base Network (Chain ID: 8453)
 * Based on OpenZeppelin ERC20 + Ownable standard
 * 
 * Features:
 * - Standard ERC20 functionality (transfer, approve, etc.)
 * - Minting capability (owner only)
 * - Burning capability (anyone can burn their own tokens)
 * - Ownership management (transfer, renounce)
 * - Optimized for Base Network gas efficiency
 * 
 * Documentation: https://docs.base.org/base-chain/quickstart/deploy-on-base
 */

export const BaseERC20 = {
  // Complete ABI for Base Network ERC20 Token
  abi: [
    // Constructor
    {
      inputs: [
        { internalType: "string", name: "name_", type: "string" },
        { internalType: "string", name: "symbol_", type: "string" },
        { internalType: "uint8", name: "decimals_", type: "uint8" },
        { internalType: "uint256", name: "initialSupply_", type: "uint256" },
        { internalType: "address", name: "owner_", type: "address" }
      ],
      stateMutability: "nonpayable",
      type: "constructor"
    },
    
    // Events
    {
      anonymous: false,
      inputs: [
        { indexed: true, internalType: "address", name: "owner", type: "address" },
        { indexed: true, internalType: "address", name: "spender", type: "address" },
        { indexed: false, internalType: "uint256", name: "value", type: "uint256" }
      ],
      name: "Approval",
      type: "event"
    },
    {
      anonymous: false,
      inputs: [
        { indexed: true, internalType: "address", name: "previousOwner", type: "address" },
        { indexed: true, internalType: "address", name: "newOwner", type: "address" }
      ],
      name: "OwnershipTransferred",
      type: "event"
    },
    {
      anonymous: false,
      inputs: [
        { indexed: true, internalType: "address", name: "from", type: "address" },
        { indexed: true, internalType: "address", name: "to", type: "address" },
        { indexed: false, internalType: "uint256", name: "value", type: "uint256" }
      ],
      name: "Transfer",
      type: "event"
    },
    
    // View Functions
    {
      inputs: [],
      name: "name",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      stateMutability: "view",
      type: "function"
    },
    {
      inputs: [],
      name: "symbol",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      stateMutability: "view",
      type: "function"
    },
    {
      inputs: [],
      name: "decimals",
      outputs: [{ internalType: "uint8", name: "", type: "uint8" }],
      stateMutability: "view",
      type: "function"
    },
    {
      inputs: [],
      name: "totalSupply",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      stateMutability: "view",
      type: "function"
    },
    {
      inputs: [{ internalType: "address", name: "account", type: "address" }],
      name: "balanceOf",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      stateMutability: "view",
      type: "function"
    },
    {
      inputs: [
        { internalType: "address", name: "owner", type: "address" },
        { internalType: "address", name: "spender", type: "address" }
      ],
      name: "allowance",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      stateMutability: "view",
      type: "function"
    },
    {
      inputs: [],
      name: "owner",
      outputs: [{ internalType: "address", name: "", type: "address" }],
      stateMutability: "view",
      type: "function"
    },
    
    // State-Changing Functions
    {
      inputs: [
        { internalType: "address", name: "to", type: "address" },
        { internalType: "uint256", name: "amount", type: "uint256" }
      ],
      name: "transfer",
      outputs: [{ internalType: "bool", name: "", type: "bool" }],
      stateMutability: "nonpayable",
      type: "function"
    },
    {
      inputs: [
        { internalType: "address", name: "spender", type: "address" },
        { internalType: "uint256", name: "amount", type: "uint256" }
      ],
      name: "approve",
      outputs: [{ internalType: "bool", name: "", type: "bool" }],
      stateMutability: "nonpayable",
      type: "function"
    },
    {
      inputs: [
        { internalType: "address", name: "from", type: "address" },
        { internalType: "address", name: "to", type: "address" },
        { internalType: "uint256", name: "amount", type: "uint256" }
      ],
      name: "transferFrom",
      outputs: [{ internalType: "bool", name: "", type: "bool" }],
      stateMutability: "nonpayable",
      type: "function"
    },
    {
      inputs: [
        { internalType: "address", name: "spender", type: "address" },
        { internalType: "uint256", name: "addedValue", type: "uint256" }
      ],
      name: "increaseAllowance",
      outputs: [{ internalType: "bool", name: "", type: "bool" }],
      stateMutability: "nonpayable",
      type: "function"
    },
    {
      inputs: [
        { internalType: "address", name: "spender", type: "address" },
        { internalType: "uint256", name: "subtractedValue", type: "uint256" }
      ],
      name: "decreaseAllowance",
      outputs: [{ internalType: "bool", name: "", type: "bool" }],
      stateMutability: "nonpayable",
      type: "function"
    },
    
    // Mint Function (Owner Only)
    {
      inputs: [
        { internalType: "address", name: "to", type: "address" },
        { internalType: "uint256", name: "amount", type: "uint256" }
      ],
      name: "mint",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    },
    
    // Burn Function (Anyone can burn their own tokens)
    {
      inputs: [{ internalType: "uint256", name: "amount", type: "uint256" }],
      name: "burn",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    },
    
    // Ownership Functions
    {
      inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
      name: "transferOwnership",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    },
    {
      inputs: [],
      name: "renounceOwnership",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    }
  ],

  // Optimized Bytecode for Base Network (Solidity 0.8.19)
  // Based on OpenZeppelin ERC20 + Ownable + Burnable
  bytecode: "0x60806040523480156200001157600080fd5b5060405162001a0838038062001a088339810160408190526200003491620002e1565b84848160039081620000479190620003f2565b506004620000568282620003f2565b5050506200007362000065620000e260201b60201c565b620000e660201b60201c565b600580546001600160a01b0319166001600160a01b0383161790556006805460ff191660ff8616179055620000b9838362000138602090811b62000a9a17901c565b50505050505050620004be565b3390565b600780546001600160a01b0383166001600160a01b03199091168117909155604051339130906000805160206200198883398151915290600090a350565b6001600160a01b038216620001945760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b8060026000828254620001a89190620004be565b90915550506001600160a01b03821660009081526020819052604081208054839290620001d7908490620004be565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200024a57600080fd5b81516001600160401b038082111562000267576200026762000220565b604051601f8301601f19908116603f0116810190828211818310171562000292576200029262000220565b81604052838152602092508683858801011115620002af57600080fd5b600091505b83821015620002d35785820183015181830184015290820190620002b4565b600093810190920192909252949350505050565b600080600080600060a08688031215620002fa57600080fd5b85516001600160401b03808211156200031257600080fd5b6200032089838a0162000236565b965060208801519150808211156200033757600080fd5b506200034688828901620 00236565b945050604086015160ff811681146200035e57600080fd5b6060870151608088015191945092506001600160a01b03811681146200038357600080fd5b809150509295509295909350565b600181811c90821680620003a657607f821691505b602082108103620003c757634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003ed57600081815260208120601f850160051c81016020861015620003f65750805b601f850160051c820191505b81811015620004175782815560010162000402565b505050505050565b81516001600160401b0381111562000439576200043962000220565b62000451816200044a845462000391565b84620003cd565b602080601f831160018114620004895760008415620004705750858301515b600019600386901b1c1916600185901b17855562000417565b600085815260208120601f198616915b82811015620004ba5788860151825594840194600190910190840162000499565b5085821015620004d95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805161148e62000509600039600081816102c101526103e0015261148e6000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806342966c68116100b857806395d89b411161007c57806395d89b411461028c578063a457c2d714610294578063a9059cbb146102a7578063dd62ed3e146102ba578063f2fde38b146102ed578063f46eccc41461030057600080fd5b806342966c681461022257806370a0823114610237578063715018a6146102605780638da5cb5b14610268578063940fa4511461027957600080fd5b806323b872dd116100ff57806323b872dd146101bb578063313ce567146101ce57806339509351146101dd57806340c10f19146101f057806342966c681461020557600080fd5b806306fdde031461013c578063095ea7b31461015a5780630b0949e21461017d57806318160ddd146101a157806318d3b12c146101a9575b600080fd5b610144610313565b60405161015191906111e5565b60405180910390f35b61016d610168366004611256565b6103a5565b6040519015158152602001610151565b61019061018b366004611280565b6103bf565b60405161015195949392919061129d565b600254610190565b6101bb6101b7366004611256565b5050565b005b61016d6101c93660046112e2565b61049f565b60405160128152602001610151565b61016d6101eb366004611256565b6104c3565b6102036101fe366004611256565b6104e5565b005b610203610213366004611323565b61057b565b610190610230366004611323565b50600090565b610190610245366004611280565b6001600160a01b031660009081526020819052604090205490565b610203610588565b6007546040516001600160a01b039091168152602001610151565b610203610287366004611280565b61059c565b6101446105e6565b61016d6102a2366004611256565b6105f5565b61016d6102b5366004611256565b610675565b6101906102c836600461133c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102036102fb366004611280565b610683565b61016d61030e366004611280565b6106f9565b6060600380546103229061136f565b80601f016020809104026020016040519081016040528092919081815260200182805461034e9061136f565b801561039b5780601f106103705761010080835404028352916020019161039b565b820191906000526020600020905b81548152906001019060200180831161037e57829003601f168201915b5050505050905090565b6000336103b3818585610743565b60019150505b92915050565b6060806000806060306001600160a01b0316637f8661a16040518163ffffffff1660e01b8152600401600060405180830381865afa158015610408573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261043091908101906113a9565b92945050506000610440336103bf565b604080516001600160a01b0383168152602081018790529081018590529091507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060600160405180910390a15090919293565b6000336104ad858285610867565b6104b88585856108e1565b506001949350505050565b6000336103b38185856104d6838361049f565b6104e09190611420565b610743565b6104ed610a80565b6001600160a01b03821661054e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b806002600082825461056091906114be565b90915550610570905082825b610a9a565b6101b7600080fd5b610583610a80565b61059981610ba7565b50565b6105a4610a80565b600780546001600160a01b0383166001600160a01b03199091168117909155604051339130906000805160206114398339815191529060009 0a350565b6060600480546103229061136f565b60008033610603828b61049f565b9050838110156106685760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610545565b6104b88286868403610743565b6000336103b38185856108e1565b61068b610a80565b6001600160a01b0381166106f05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610545565b6105998161059c565b60006001600160a01b03821661073d5760405162461bcd60e51b8152602060048201526014602482015273496e76616c6964206164647265737320676976656e60601b6044820152606401610545565b50600190565b6001600160a01b0383166107a55760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610545565b6001600160a01b0382166108065760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610545565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000610873848461049f565b905060001981146108db57818110156108ce5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610545565b6108db8484848403610743565b50505050565b6001600160a01b0383166109455760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610545565b6001600160a01b0382166109a75760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610545565b6001600160a01b03831660009081526020819052604090205481811015610a1f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610545565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610a569084906114be565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161085a91815260200190565b6007546001600160a01b031633146101b75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610545565b6001600160a01b038216610af05760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610545565b8060026000828254610b0291906114be565b90915550506001600160a01b03821660009081526020819052604081208054839290610b2f9084906114be565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038116610bd75760405162461bcd60e51b815260206004820152600c60248201526b5a65726f206164647265737360a01b6044820152606401610545565b610be08161030e565b15610c2d5760405162461bcd60e51b815260206004820152601860248201527f4164647265737320616c72656164792076657269666965642100000000000000006044820152606401610545565b6001600160a01b03166000908152600860205260409020805460ff19166001179055565b600060208083528351808285015260005b81811015610c7257858101830151858201604001528201610c56565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610caa57600080fd5b919050565b60008060408385031215610cc257600080fd5b610ccb83610c93565b946020939093013593505050565b600060208284031215610ceb57600080fd5b610cf482610c93565b9392505050565b600080600060608486031215610d1057600080fd5b610d1984610c93565b9250610d2760208501610c93565b9150604084013590509250925092565b600060208284031215610d4957600080fd5b5035919050565b60008060408385031215610d6357600080fd5b610d6c83610c93565b9150610d7a60208401610c93565b90509250929050565b600181811c90821680610d9757607f821691505b602082108103610db757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156103b9576103b9610dbd565b818103818111156103b9576103b9610dbd56fea26469706673582212207c8a4e5b6f7e9c5a8b5f4e2a5c6b3f8e9c7d5a4b2e8f9c6d5e4a3b2f8e9c6d564736f6c63430008130033"
};

// ERC20 ABI for reading token information (no deployment needed)
export const ERC20_ABI = BaseERC20.abi;

// Contract Factory Interface
export interface IBaseERC20Factory {
  deploy(
    name: string,
    symbol: string,
    decimals: number,
    initialSupply: string,
    owner: string
  ): Promise<string>;
}

// Export for compatibility
export const SimpleERC20 = BaseERC20;
export { BaseERC20 as default };
